// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Learning_EFCore.Database
{
    public partial class Profiles2Context : DbContext
    {
        public Profiles2Context()
        {
        }

        public Profiles2Context(DbContextOptions<Profiles2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Article> Article { get; set; }
        public virtual DbSet<ArticleCategory> ArticleCategory { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Article>(entity =>
            {
                entity.ToTable("article");

                entity.HasComment("文章");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AuthorName)
                    .HasColumnName("author_name")
                    .HasMaxLength(255);

                entity.Property(e => e.CategoryId)
                    .IsRequired()
                    .HasColumnName("category_id")
                    .HasMaxLength(128);

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasColumnName("content");

                entity.Property(e => e.ContentType)
                    .IsRequired()
                    .HasColumnName("content_type");

                entity.Property(e => e.CoverUrl).HasColumnName("cover_url");

                entity.Property(e => e.CreateTime)
                    .HasColumnName("create_time")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.ModifyTime)
                    .HasColumnName("modify_time")
                    .HasColumnType("timestamp with time zone");

                entity.Property(e => e.OldId).HasColumnName("old_id");

                entity.Property(e => e.Published).HasColumnName("published");

                entity.Property(e => e.Summary).HasColumnName("summary");

                entity.Property(e => e.Tags).HasColumnName("tags");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasColumnName("title")
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<ArticleCategory>(entity =>
            {
                entity.ToTable("article_category");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(128);

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasMaxLength(255);

                entity.Property(e => e.Sort).HasColumnName("sort");

                entity.Property(e => e.Summary).HasColumnName("summary");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}